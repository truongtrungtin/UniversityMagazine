@model IEnumerable<EntityModels.EF.ARTICLE>
@using System.Globalization;
@using UniversityMagazine.Common

@{
    ViewBag.Title = "Articles Approved";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var session = (UserLogin)Session[CommonConstants.USER_SESSION];
    var Credentials = (IEnumerable<Credentials>)Session[CommonConstants.SESSION_CREDENTIALS];
}

@section breadcrumb{
    <li class="breadcrumb-item"><a href="~/Management/Faculty/">Faculty</a></li>
    <li class="breadcrumb-item">Download</li>
    <li class="breadcrumb-item active">@ViewBag.Title</li>
}
@section css{
    <style>
        .mailbox-attachments li {
            width: 250px !important;
        }

        .filterDiv {
            float: left;
            display: none;
        }

        .container {
            margin-top: 20px;
            overflow: hidden;
        }

        .show {
            display: block;
        }

        /* Style the buttons */
        .btn {
            border: none;
            outline: none;
            padding: 12px 16px;
            background-color: #f1f1f1;
            cursor: pointer;
        }

            .btn:hover {
                background-color: #ddd;
            }

            .btn.active {
                background-color: #666;
                color: white;
            }
    </style>
}
<div class="card card-primary card-outline">
    <div class="card-header">
        <h3 class="card-title text-bold float-left">
            Downloads
        </h3>
        <div class="float-right">
            <div id="myBtnContainer">
                <a href="#" class="btn" id="all" onclick="filterSelection(this.id)">Show all</a>
                @foreach (var item in Model.Select(x => new { a = x.ARTICLE_UploadTime.Value.ToString("yyyy")}).GroupBy(x => new { x.a}).Distinct())
                {
                    <a class="btn" href="#" id="@item.FirstOrDefault().a" onclick="filterSelection(this.id)">@item.FirstOrDefault().a</a>
                }
            </div>
        </div>
    </div>
    <div class="card-body">
        <ul class="mailbox-attachments d-flex align-items-stretch clearfix">
            @foreach (var item in Model.Select(x => new { a = Convert.ToDateTime(x.ARTICLE_UploadTime.Value.ToString("MM-yyyy")), b = x.ACCOUNT }).GroupBy(x => new { x.a, x.b }).Distinct())
            {
                <li class="filterDiv @item.FirstOrDefault().a.ToString("yyyy")">
                        @using (Html.BeginForm("DownloadZipArticles", "Faculty", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <input type="hidden" name="Month" readonly value="@item.FirstOrDefault().a.ToString("MM")" />
                            <input type="hidden" name="Year" readonly value="@item.FirstOrDefault().a.ToString("yyyy")" />
                            <input type="hidden" name="fACULTY_Code" readonly value="@ViewBag.fACULTY_Code" />
                            <input type="hidden" name="username" readonly value="@item.FirstOrDefault().b.ACCOUNT_Username" />
                            <span class="mailbox-attachment-icon"><i class="fas fa-file-archive"></i></span>

                            <div class="mailbox-attachment-info">
                                <a href="/MyUpload/File/" class="mailbox-attachment-name">@item.FirstOrDefault().a.ToString("MM-yyyy")@(item.FirstOrDefault().b != null ? "_" + item.FirstOrDefault().b.FACULTY.FACULTY_Code + "_"+ item.FirstOrDefault().b.ACCOUNT_Username : "_Unknown").zip</a>

                                <span class="mailbox-attachment-size clearfix mt-1">
                                    <span><i class="far fa-lg far fa-file-word"></i><b> Articles:  </b> @item.Count()</span>

                                    <button type="submit" class="btn btn-success btn-sm float-right" title="Download"><i class="fa fa-download"></i></button>
                                </span>
                            </div>
                        }

                </li>

            }

        </ul>
    </div>
</div>
@section js{
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script>
        $(function () {
            $('#MYUPLOAD').addClass("menu-open");
            $('#FILES').addClass("active");

            $('.DeleteFile').click(function () {
                if (!confirm("Are you sure you want to delete?")) {
                    return false;
                } else {
                    var ARTICLE_Id = $(this).attr('id');
                    $.ajax({
                        url: "/MyUpload/DeleteFileJson?ARTICLE_Id=" + ARTICLE_Id,
                        dataType: "json",
                        type: "Post",
                        success: function (res) {
                            if (res.data) {
                                $('#row_' + ARTICLE_Id).remove();
                                location.reload();
                            }
                        }
                    });
                }
            })

            
        });

        filterSelection("all")
        function filterSelection(c) {
            var x, i;
            x = document.getElementsByClassName("filterDiv");
            if (c == "all") c = "";
            for (i = 0; i < x.length; i++) {
                w3RemoveClass(x[i], "show");
                if (x[i].className.indexOf(c) > -1) w3AddClass(x[i], "show");
            }
        }

        function w3AddClass(element, name) {
            var i, arr1, arr2;
            arr1 = element.className.split(" ");
            arr2 = name.split(" ");
            for (i = 0; i < arr2.length; i++) {
                if (arr1.indexOf(arr2[i]) == -1) { element.className += " " + arr2[i]; }
            }
        }

        function w3RemoveClass(element, name) {
            var i, arr1, arr2;
            arr1 = element.className.split(" ");
            arr2 = name.split(" ");
            for (i = 0; i < arr2.length; i++) {
                while (arr1.indexOf(arr2[i]) > -1) {
                    arr1.splice(arr1.indexOf(arr2[i]), 1);
                }
            }
            element.className = arr1.join(" ");
        }

        // Add active class to the current button (highlight it)
        var btnContainer = document.getElementById("myBtnContainer");
        var btns = btnContainer.getElementsByClassName("btn");
        for (var i = 0; i < btns.length; i++) {
            btns[i].addEventListener("click", function () {
                var current = document.getElementsByClassName("active");
                current[0].className = current[0].className.replace(" active", "");
                this.className += " active";
            });
        }
    </script>
}



